{"title":"Dashboard","scrolling":true,"loadflow":"var localUserLoaded, localUserReq;\nOF.GA.setAccount('UA-3107048-21', 'spotlight.android.openfeint.com');\n$.loadScript('dashboard/dashboard');\nif ((typeof jasmine !== \"undefined\" && jasmine !== null) && OF.isBrowser) {\n  $.loadCss('settings/spec');\n}\nlocalUserLoaded = localUserReq = null;\nOF.loadLocalUser = function() {\n  if (OF.user.isLoaded) {\n    return typeof localUserLoaded === \"function\" ? localUserLoaded() : void 0;\n  } else {\n    return localUserReq || (localUserReq = OF.api(\"/xp/users/me\", {\n      success: function(userData) {\n        OF.user = userData.user;\n        OF.user.isLoaded = true;\n        if (typeof localUserLoaded === \"function\") {\n          localUserLoaded();\n        }\n        return localUserLoaded = localUserReq = null;\n      }\n    }));\n  }\n};\nOF.localUserLoaded = function(callback) {\n  if (OF.user.isLoaded) {\n    return callback();\n  } else {\n    return localUserLoaded = callback;\n  }\n};","init":"//load common js for dashboard webview\n$.loadScript('dashboard/dashboard_model');\n\nOF.loadLocalUser();\n$('body').addClass('textured');\n$('.button').pretouch();\n\n// Menu handling functions\nif (OF.action.isSupported('enableMenuItems')) {\n  OF.sendAction('enableMenuItems', {'items':['home','settings','exit']});\n}\n\nif (!OF.menu) {\n  OF.menu = function(buttonName) {\n    if (typeof OF.menu[buttonName] === 'function')\n    {\n      OF.menu[buttonName]();\n    }\n    else\n    {\n      OF.log('Unknown menu button hit: '+ buttonName);\n    }\n  };\n}\n\nOF.menu.home = function() {\n  if (OF.navigationStack[0].url.match(/dashboard\\/user/)) {\n    OF.goBack({root:true});\n  } else {\n\n    // This is a bit of a hack for now...\n    OF.navigateToUrl(\"dashboard/user\", {\n      complete: function() {\n        OF.pages.unshift(OF.pages.pop());\n        OF.action('back', {root:true}, OF.contentLoaded);\n      }\n    });\n  }\n};\n\nOF.menu.settings = function() {\n  OF.sendAction('openSettings');\n};\n\nOF.menu.exit = function() {\n  OF.sendAction('dismiss');\n};\n\n// Base friends page functions\nif (!OF.friendsList) {\n  OF.friendsList = {\n    init: function() {\n      jQuery.lazyLoad({\n        threshold: 0.5,  //percentage of the window height left to scroll that will trigger the next page\n        nextPageLoaded: function(page, data){ \n          if (page == 1) {\n            OF.friendsList.renderFriends(data);                 \n          } else {\n            OF.friendsList.addFriends(data);         \n          }\n        },\n        nextPageShouldLoad: function(page, callback) {\n          OF.api('/xp/friends', {\n            params: {\n              user_id:   OF.page.user.id,\n              page:      page,\n              page_size: 50\n            },\n            success: function(data) {\n              callback(data.users, data.users.length < 50)\n            },\n            failure: function() { callback([]); }\n          });\n        },\n        isEmpty: function() { OF.friendsList.renderFriends([]); },\n        isFinished: function() { jQuery(\"#loading\").hide(); }\n      });\n    },\n    \n    renderFriendItems: function(friends) {\n      var html = jQuery.map(friends, function(friend) {\n       return tmpl('user_tmpl', friend);\n      });\n      return html;\n    },\n    \n    renderFriends : function(friends) {    \n      var html = OF.friendsList.renderFriendItems(friends);\n      \n      if (html.length > 0) {\n        jQuery('#friends_list > ul').html(html.join('')).unhide();\n        jQuery(\"#friends_list .no_data\").hide();\n      } else {\n        jQuery('#friends_list > ul').hide();\n        jQuery(\"#friends_list .no_data\").unhide();      \n      }\n    },\n    \n    addFriends : function(friends) {    \n      var html = OF.friendsList.renderFriendItems(friends);\n      jQuery('#friends_list > ul').append(html.join(''));\n    }\n  };\n}\n\n// Go home on touching the logo area\n$('#home_button').touch(OF.menu.home);\nvar nativeConfig, tabImagePathOf;\nvar __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\ntabImagePathOf = function(imageName) {\n  return \"\" + (OF.platform === 'ios' ? 'cache:' : '') + \"images/dashboard/tabs/\" + imageName + \".\" + OF.dpi + \".png\";\n};\nnativeConfig = {\n  activeBackground: tabImagePathOf('tab_green'),\n  inactiveBackground: tabImagePathOf('tab_grey'),\n  leftDivider: tabImagePathOf('tab_divider_left'),\n  rightDivider: tabImagePathOf('tab_divider_right'),\n  height: 37\n};\nthis.myTabs = [\n  {\n    name: \"community\",\n    path: \"dashboard/user\",\n    active: true\n  }, {\n    name: \"profile\",\n    path: \"dashboard/profile\",\n    options: {\n      params: {\n        user: OF.user\n      }\n    }\n  }\n];\nthis.myTabs.map(function(tab) {\n  tab.activeImage = tabImagePathOf(\"tab_\" + tab.name + \"_white\");\n  tab.inactiveImage = tabImagePathOf(\"tab_\" + tab.name + \"_grey\");\n  return tab.element = \"\" + tab.name + \"_tab\";\n});\nOF.nativeTabCallback = __bind(function(touchedTabIndex) {\n  return this.tabController.setActiveTab(this.myTabs[touchedTabIndex].name);\n}, this);\nthis.displayIn = $('#content');\nthis.tabController = new OF.control.TabControl({\n  \"native\": true,\n  nativeConfig: nativeConfig,\n  tabs: this.myTabs,\n  location: this.displayIn\n});","resume":null,"appear":"$('#header .title').html(OF.page.title);","disappear":null,"exit":null,"html":"<div id='dashboard'>\n  <div id='header'>\n    <span class='loading'>\n      <span class='spinner'></span>\n    </span>\n    <div class='title' id='home_button'></div>\n  </div>\n  <div id='dashboard_tabbar'>\n    <div id='community_tab' style='display:none;'>Community</div>\n    <div id='profile_tab' style='display:none;'>Profile</div>\n  </div>\n  <div id='content' style='width:100%;'></div>\n</div>\n"}
